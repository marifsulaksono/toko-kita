// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/purchases": {
            "get": {
                "description": "Mendapatkan semua data pembelian",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "purchases"
                ],
                "summary": "Get purchases",
                "parameters": [
                    {
                        "description": "Purchase request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GetPurchaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Buat data pembelian secara bulk maupun satu per satu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "purchases"
                ],
                "summary": "Create bulk purchase",
                "parameters": [
                    {
                        "description": "Purchase request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BulkPurchaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    }
                }
            }
        },
        "/purchases/:id": {
            "put": {
                "description": "Memperbarui data pembelian",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "purchases"
                ],
                "summary": "Update purchases",
                "parameters": [
                    {
                        "description": "Purchase request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StockBatchItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Menghapus data pembelian berdasarkan id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "purchases"
                ],
                "summary": "Delete purchases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID Pembelian",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    }
                }
            }
        },
        "/sales": {
            "get": {
                "description": "Mendapatkan semua data penjualan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sales"
                ],
                "summary": "Get sales",
                "parameters": [
                    {
                        "description": "Sale request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GetSaleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Buat transaksi penjualan menggunakan metode FIFO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sales"
                ],
                "summary": "Create sale",
                "parameters": [
                    {
                        "description": "Sale request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SaleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    }
                }
            }
        },
        "/sales/:id": {
            "get": {
                "description": "Mendapatkan data penjualan berdasarkan id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sales"
                ],
                "summary": "Get sale by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID Penjualan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Menghapus data penjualan berdasarkan id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sales"
                ],
                "summary": "Delete sale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID Penjualan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    }
                }
            }
        },
        "/sales/report": {
            "get": {
                "description": "Mendapatkan data laporan total penjualan, total HPP, dan total profit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sales"
                ],
                "summary": "Get monthly sales report",
                "parameters": [
                    {
                        "description": "Sale request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GetMonthlySalesReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSONResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BulkPurchaseRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.StockBatchItem"
                    }
                }
            }
        },
        "dto.GetMonthlySalesReport": {
            "type": "object",
            "properties": {
                "item_id": {
                    "type": "string"
                },
                "month": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "dto.GetPurchaseRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "item_id": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer",
                    "minimum": 1
                },
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "search": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "string"
                }
            }
        },
        "dto.GetSaleRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer",
                    "minimum": 1
                },
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "search": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "dto.SaleRequest": {
            "type": "object",
            "required": [
                "date"
            ],
            "properties": {
                "customer_name": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "sales_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SalesDetail"
                    }
                }
            }
        },
        "dto.SalesDetail": {
            "type": "object",
            "required": [
                "item_id",
                "qty"
            ],
            "properties": {
                "item_id": {
                    "type": "string"
                },
                "qty": {
                    "type": "integer"
                }
            }
        },
        "dto.StockBatchItem": {
            "type": "object",
            "required": [
                "batch_no",
                "purchased_at",
                "purchased_price",
                "purchased_qty",
                "supplier_id"
            ],
            "properties": {
                "batch_no": {
                    "type": "string",
                    "maxLength": 50
                },
                "item_id": {
                    "type": "string"
                },
                "purchased_at": {
                    "type": "string"
                },
                "purchased_price": {
                    "type": "number",
                    "minimum": 0
                },
                "purchased_qty": {
                    "type": "integer",
                    "minimum": 1
                },
                "remaining_qty": {
                    "type": "integer",
                    "minimum": 1
                },
                "supplier_id": {
                    "type": "string"
                }
            }
        },
        "response.JSONResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "metadata": {}
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "TokoKita API",
	Description:      "Backend untuk sistem penjualan FIFO",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
